plugins {
	id 'org.springframework.boot' version '2.5.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'org.seasar.doma.compile' version "1.1.0"
//  id 'eclipse'
  // id "net.ltgt.apt-eclipse" version "0.18"
}

group = 'jp.co.mimaze.lesson.exercise.web'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

//compileJava {
//	options.annotationProcessorGeneratedSourcesDirectory = file("${projectDir}/src/main/generated")
//}

//sourceSets {
//    main {
//        java {
//            srcDirs = ['src/main/java', 'src/main/generated']
//        }
//    }
//}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.webjars:webjars-locator:0.32'
	implementation 'org.webjars:bootstrap:5.0.1'
	implementation 'org.webjars:jquery:3.6.0'
	implementation 'org.webjars:font-awesome:5.15.2'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	annotationProcessor 'org.seasar.doma:doma-processor:2.46.2'
	implementation 'org.seasar.doma:doma-core:2.46.2'
	implementation 'org.seasar.doma:doma-slf4j:2.46.2'
	implementation 'mysql:mysql-connector-java:8.0.25'
	implementation 'org.seasar.doma.boot:doma-spring-boot-starter:1.5.0'
}

test {
	useJUnitPlatform()
}

//eclipse {
//    classpath {
//        file.beforeMerged { cp ->
//            cp.entries.add( new org.gradle.plugins.ide.eclipse.model.SourceFolder('build/generated/sources/annotationProcessor/java/main', null) )
//        }
//    }
//}

// eclipse {
//   classpath {
//     containers 'org.eclipse.buildship.core.gradleclasspathcontainer'
//     file.whenMerged { cp ->
//       def entries = cp.entries;
//       def src = new org.gradle.plugins.ide.eclipse.model.SourceFolder('build/generated/sources/annotationProcessor/java/main/', null)
//       entries.add(src)
//     } 
//   }
// }
